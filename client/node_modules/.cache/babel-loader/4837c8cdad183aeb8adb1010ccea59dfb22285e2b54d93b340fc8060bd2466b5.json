{"ast":null,"code":"var _jsxFileName = \"/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useUsers } from '../hooks/useApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskDetailDialog({\n  taskId,\n  open,\n  handleClose\n}) {\n  _s();\n  const [task, setTask] = useState({});\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [statusId, setStatusId] = useState('');\n  const [assigneeId, setAssigneeId] = useState('');\n  const [availableUsers, setAvailableUsers] = useState([]);\n  const users = useUsers({\n    role: ''\n  });\n  useEffect(() => {\n    if (open && taskId) {\n      fetchTask(taskId);\n      fetchAvailableUsers();\n    }\n  }, [open, taskId]);\n  const fetchAvailableUsers = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/users`);\n      setAvailableUsers(response.data.filter(user => user.id !== assigneeId)); // Filtern bereits zugewiesene Benutzer heraus\n    } catch (error) {\n      console.error('Error fetching available users:', error);\n    }\n  };\n  const fetchTask = async taskId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/tasks/${taskId}`);\n      setTask(response.data);\n      setName(response.data.name);\n      setDescription(response.data.description);\n      setStatusId(response.data.status_id);\n    } catch (error) {\n      console.error('Error fetching task:', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      await axios.put(`http://localhost:4000/tasks/${taskId}`, {\n        name,\n        description,\n        status_id: statusId\n      });\n      if (assigneeId) {\n        await axios.post('http://localhost:4000/taskAssignees', {\n          task_id: taskId,\n          user_id: assigneeId\n        });\n      }\n      handleClose();\n    } catch (error) {\n      console.error('Error updating task:', error);\n      alert('Fehler beim Aktualisieren des Tasks. Bitte versuchen Sie es später erneut.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        fullWidth: true,\n        multiline: true,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Status\",\n        value: statusId,\n        onChange: e => setStatusId(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Assignee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: assigneeId,\n          onChange: e => setAssigneeId(e.target.value),\n          children: availableUsers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: user.id,\n            children: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateTask,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetailDialog, \"GI8hfHTeFqRmL4wK4Srz0nSO2ok=\", false, function () {\n  return [useUsers];\n});\n_c = TaskDetailDialog;\nexport default TaskDetailDialog;\nvar _c;\n$RefreshReg$(_c, \"TaskDetailDialog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Select","MenuItem","FormControl","InputLabel","useUsers","jsxDEV","_jsxDEV","TaskDetailDialog","taskId","open","handleClose","_s","task","setTask","name","setName","description","setDescription","statusId","setStatusId","assigneeId","setAssigneeId","availableUsers","setAvailableUsers","users","role","fetchTask","fetchAvailableUsers","response","get","data","filter","user","id","error","console","status_id","handleUpdateTask","put","post","task_id","user_id","alert","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","multiline","rows","map","username","onClick","variant","color","_c","$RefreshReg$"],"sources":["/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useUsers } from '../hooks/useApi';\n\nfunction TaskDetailDialog({ taskId, open, handleClose }) {\n  const [task, setTask] = useState({});\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [statusId, setStatusId] = useState('');\n  const [assigneeId, setAssigneeId] = useState('');\n  const [availableUsers, setAvailableUsers] = useState([]);\n\n  const users = useUsers({role: ''});\n\n  useEffect(() => {\n    if (open && taskId) {\n      fetchTask(taskId);\n      fetchAvailableUsers();\n    }\n  }, [open, taskId]);\n\n  const fetchAvailableUsers = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/users`);\n      setAvailableUsers(response.data.filter(user => user.id !== assigneeId)); // Filtern bereits zugewiesene Benutzer heraus\n    } catch (error) {\n      console.error('Error fetching available users:', error);\n    }\n  };\n\n\n  const fetchTask = async (taskId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/tasks/${taskId}`);\n      setTask(response.data);\n      setName(response.data.name);\n      setDescription(response.data.description);\n      setStatusId(response.data.status_id);\n    } catch (error) {\n      console.error('Error fetching task:', error);\n    }\n  };\n\n  const handleUpdateTask = async () => {\n    try {\n      await axios.put(`http://localhost:4000/tasks/${taskId}`, {\n        name,\n        description,\n        status_id: statusId\n      });\n\n      if (assigneeId) {\n        await axios.post('http://localhost:4000/taskAssignees', {\n          task_id: taskId,\n          user_id: assigneeId\n        });\n      }\n  \n      handleClose();\n    } catch (error) {\n      console.error('Error updating task:', error);\n      alert('Fehler beim Aktualisieren des Tasks. Bitte versuchen Sie es später erneut.');\n    \n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Edit Task</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          fullWidth\n        />\n        <TextField\n          label=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          fullWidth\n          multiline\n          rows={4}\n        />\n      \n        <TextField\n          label=\"Status\"\n          value={statusId}\n          onChange={(e) => setStatusId(e.target.value)}\n          fullWidth\n        />\n        <FormControl fullWidth>\n          <InputLabel>Assignee</InputLabel>\n          <Select\n            value={assigneeId}\n            onChange={(e) => setAssigneeId(e.target.value)}\n          >\n            {availableUsers.map((user) => (\n              <MenuItem key={user.id} value={user.id}>{user.username}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleUpdateTask} variant=\"contained\" color=\"primary\">Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TaskDetailDialog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}