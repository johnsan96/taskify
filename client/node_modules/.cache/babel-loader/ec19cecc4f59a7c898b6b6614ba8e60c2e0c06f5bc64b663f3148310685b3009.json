{"ast":null,"code":"var _jsxFileName = \"/home/john/Dokumente/projects/taskify/client/src/components/Register.js\",\n  _s = $RefreshSig$();\n// Importe\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Funktionskomponente für die Registrierung\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // Zustände für die Eingabefelder\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Handler für die Benutzerregistrierung\n  const handleRegister = async () => {\n    try {\n      // Sende eine POST-Anfrage an die API zum Erstellen eines neuen Benutzers\n      const response = await axios.post('http://localhost:4000/users', {\n        username,\n        password\n      });\n      console.log('Neuer Benutzer wurde erfolgreich registriert:', response.data);\n      // Optional: Weiterleitung nach erfolgreicher Registrierung\n      // Hier kannst du die Weiterleitung nach deinen Anforderungen anpassen\n      // history.push('/login'); // Beispiel: Weiterleitung zur Login-Seite\n    } catch (error) {\n      console.error('Fehler bei der Registrierung:', error);\n      // Behandlung von Fehlern hier...\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","handleRegister","response","post","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/john/Dokumente/projects/taskify/client/src/components/Register.js"],"sourcesContent":["// Importe\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// Funktionskomponente für die Registrierung\nfunction Register() {\n  // Zustände für die Eingabefelder\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  \n  // Handler für die Benutzerregistrierung\n  const handleRegister = async () => {\n    try {\n      // Sende eine POST-Anfrage an die API zum Erstellen eines neuen Benutzers\n      const response = await axios.post('http://localhost:4000/users', { username, password });\n      console.log('Neuer Benutzer wurde erfolgreich registriert:', response.data);\n      // Optional: Weiterleitung nach erfolgreicher Registrierung\n      // Hier kannst du die Weiterleitung nach deinen Anforderungen anpassen\n      // history.push('/login'); // Beispiel: Weiterleitung zur Login-Seite\n    } catch (error) {\n      console.error('Fehler bei der Registrierung:', error);\n      // Behandlung von Fehlern hier...\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <div>\n        <label>Username:</label>\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        <label>Password:</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </div>\n      <button onClick={handleRegister}>Register</button>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAE;QAAEN,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACxFK,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC3E;MACA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEjB,QAAS;QAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eACNlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlB,OAAA;QAAOmB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEf,QAAS;QAACgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACNlB,OAAA;MAAQwB,OAAO,EAAEjB,cAAe;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAAChB,EAAA,CAlCQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}