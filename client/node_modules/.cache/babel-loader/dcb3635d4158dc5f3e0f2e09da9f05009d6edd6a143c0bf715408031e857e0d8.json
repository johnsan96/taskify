{"ast":null,"code":"var _jsxFileName = \"/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useUsers } from '../hooks/useApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskDetailDialog({\n  taskId,\n  open,\n  handleClose\n}) {\n  _s();\n  const [task, setTask] = useState({});\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [statusId, setStatusId] = useState('');\n  const users = useUsers();\n  useEffect(() => {\n    if (open && taskId) {\n      fetchTask(taskId);\n    }\n  }, [open, taskId]);\n  const fetchTask = async taskId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/tasks/${taskId}`);\n      setTask(response.data);\n      setName(response.data.name);\n      setDescription(response.data.description);\n      setStatusId(response.data.status_id);\n    } catch (error) {\n      console.error('Error fetching task:', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      await axios.put(`http://localhost:4000/tasks/${taskId}`, {\n        name,\n        description,\n        status_id: statusId\n      });\n      handleClose();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        fullWidth: true,\n        multiline: true,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Status\",\n        value: statusId,\n        onChange: e => setStatusId(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Assignee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: assigneeId,\n          onChange: e => setAssigneeId(e.target.value),\n          children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: user.id,\n            children: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpdateTask,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetailDialog, \"FKZu8zg/vdoYeA6WxUM8YXpEoeI=\", false, function () {\n  return [useUsers];\n});\n_c = TaskDetailDialog;\nexport default TaskDetailDialog;\nvar _c;\n$RefreshReg$(_c, \"TaskDetailDialog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Select","MenuItem","FormControl","InputLabel","useUsers","jsxDEV","_jsxDEV","TaskDetailDialog","taskId","open","handleClose","_s","task","setTask","name","setName","description","setDescription","statusId","setStatusId","users","fetchTask","response","get","data","status_id","error","console","handleUpdateTask","put","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","multiline","rows","assigneeId","setAssigneeId","map","user","id","username","onClick","variant","color","_c","$RefreshReg$"],"sources":["/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useUsers } from '../hooks/useApi';\n\nfunction TaskDetailDialog({ taskId, open, handleClose }) {\n  const [task, setTask] = useState({});\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [statusId, setStatusId] = useState('');\n\n  const users = useUsers();\n\n  useEffect(() => {\n    if (open && taskId) {\n      fetchTask(taskId);\n    }\n  }, [open, taskId]);\n\n  const fetchTask = async (taskId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/tasks/${taskId}`);\n      setTask(response.data);\n      setName(response.data.name);\n      setDescription(response.data.description);\n      setStatusId(response.data.status_id);\n    } catch (error) {\n      console.error('Error fetching task:', error);\n    }\n  };\n\n  const handleUpdateTask = async () => {\n    try {\n      await axios.put(`http://localhost:4000/tasks/${taskId}`, {\n        name,\n        description,\n        status_id: statusId\n      });\n      handleClose();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Edit Task</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          fullWidth\n        />\n        <TextField\n          label=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          fullWidth\n          multiline\n          rows={4}\n        />\n        {/* Assuming you have a select component for status */}\n        <TextField\n          label=\"Status\"\n          value={statusId}\n          onChange={(e) => setStatusId(e.target.value)}\n          fullWidth\n        />\n        <FormControl fullWidth>\n          <InputLabel>Assignee</InputLabel>\n          <Select\n            value={assigneeId}\n            onChange={(e) => setAssigneeId(e.target.value)}\n          >\n            {users.map((user) => (\n              <MenuItem key={user.id} value={user.id}>{user.username}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleUpdateTask} variant=\"contained\" color=\"primary\">Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TaskDetailDialog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}