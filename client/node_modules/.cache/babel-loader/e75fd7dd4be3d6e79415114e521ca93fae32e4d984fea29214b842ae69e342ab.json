{"ast":null,"code":"var _jsxFileName = \"/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TableRow, TableCell } from '@mui/material';\nimport TaskDetailDialog from './TaskDetailDialog';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskTableRow({\n  task,\n  tasks,\n  setTrack,\n  trackChanges\n}) {\n  _s();\n  var _tasks$find, _tasks$find2;\n  const [isTaskDetailDialogOpen, setTaskDetailDialogOpen] = useState(false);\n  const [assignees, setAssignees] = useState([]);\n  const handleOpenTaskDetailDialog = () => {\n    setTaskDetailDialogOpen(true);\n    setTrack(false);\n  };\n  const handleCloseTaskDetailDialog = () => {\n    setTaskDetailDialogOpen(false);\n  };\n  const getStatusString = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'Todo';\n      case 2:\n        return 'In Progress';\n      case 3:\n        return 'Completed';\n      default:\n        return 'Unknown Status';\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_API}/tasks/${taskId}`);\n      setTrack(true);\n    } catch (error) {\n      console.error('Fehler beim Löschen der Aufgabe:', error);\n    }\n  };\n  useEffect(() => {\n    async function fetchAssignees() {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API}/taskAssignees?task_id=${task.task_id}`);\n        const assigneesData = response.data;\n        if (assigneesData.length > 0) {\n          const userIds = assigneesData.map(assignee => assignee.user_id);\n          const names = await Promise.all(userIds.map(async userId => {\n            const userResponse = await axios.get(`${process.env.REACT_APP_API}/users/${userId}`);\n            return userResponse.data.username;\n          }));\n          setAssignees(names);\n        }\n      } catch (error) {\n        console.error('Fehler beim Abrufen der Task-Zuweisen:', error);\n      }\n    }\n    fetchAssignees();\n  }, [task.task_id, trackChanges]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: \"taskTableRow\",\n      onClick: handleOpenTaskDetailDialog,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: ((_tasks$find = tasks.find(t => t.id === task.task_id)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.name) || 'Unknown Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: getStatusString((_tasks$find2 = tasks.find(t => t.id === task.task_id)) === null || _tasks$find2 === void 0 ? void 0 : _tasks$find2.status_id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: assignees.length > 0 ? assignees.join(', ') : 'Unassigned'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            deleteTask(task.task_id);\n            setTrack(true);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskDetailDialog, {\n      open: isTaskDetailDialogOpen,\n      handleClose: () => {\n        handleCloseTaskDetailDialog();\n        setTrack(true);\n      },\n      taskId: task.task_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskTableRow, \"ESOVmq+JVmw7Uu7e5Zkpllc8zS4=\");\n_c = TaskTableRow;\nexport default TaskTableRow;\nvar _c;\n$RefreshReg$(_c, \"TaskTableRow\");","map":{"version":3,"names":["React","useState","useEffect","TableRow","TableCell","TaskDetailDialog","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskTableRow","task","tasks","setTrack","trackChanges","_s","_tasks$find","_tasks$find2","isTaskDetailDialogOpen","setTaskDetailDialogOpen","assignees","setAssignees","handleOpenTaskDetailDialog","handleCloseTaskDetailDialog","getStatusString","statusId","deleteTask","taskId","delete","process","env","REACT_APP_API","error","console","fetchAssignees","response","get","task_id","assigneesData","data","length","userIds","map","assignee","user_id","names","Promise","all","userId","userResponse","username","children","className","onClick","component","scope","find","t","id","name","fileName","_jsxFileName","lineNumber","columnNumber","status_id","join","e","stopPropagation","open","handleClose","_c","$RefreshReg$"],"sources":["/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TableRow, TableCell } from '@mui/material';\nimport TaskDetailDialog from './TaskDetailDialog';\nimport axios from 'axios';\n\nfunction TaskTableRow({ task, tasks, setTrack, trackChanges }) {\n    const [isTaskDetailDialogOpen, setTaskDetailDialogOpen] = useState(false);\n    const [assignees, setAssignees] = useState([]);\n\n    const handleOpenTaskDetailDialog = () => {\n        setTaskDetailDialogOpen(true);\n        setTrack(false);\n    };\n\n    const handleCloseTaskDetailDialog = () => {\n        setTaskDetailDialogOpen(false);\n    };\n\n    const getStatusString = (statusId) => {\n        switch (statusId) {\n            case 1:\n                return 'Todo';\n            case 2:\n                return 'In Progress';\n            case 3:\n                return 'Completed';\n            default:\n                return 'Unknown Status';\n        }\n    };\n\n    const deleteTask = async (taskId) => {\n        try {\n            await axios.delete(`${process.env.REACT_APP_API}/tasks/${taskId}`);\n            setTrack(true);\n        } catch (error) {\n            console.error('Fehler beim Löschen der Aufgabe:', error);\n        }\n    };\n\n\n\n    useEffect(() => {\n        async function fetchAssignees() {\n            try {\n                const response = await axios.get(`${process.env.REACT_APP_API}/taskAssignees?task_id=${task.task_id}`);\n                const assigneesData = response.data;\n                if (assigneesData.length > 0) {\n                 \n                    const userIds = assigneesData.map(assignee => assignee.user_id);\n                 \n                    const names = await Promise.all(userIds.map(async userId => {\n                        const userResponse = await axios.get(`${process.env.REACT_APP_API}/users/${userId}`);\n                        return userResponse.data.username;\n                    }));\n                    setAssignees(names);\n                }\n            } catch (error) {\n                console.error('Fehler beim Abrufen der Task-Zuweisen:', error);\n            }\n        }\n\n        fetchAssignees();\n    }, [task.task_id, trackChanges]);\n\n    return (\n        <>\n            <TableRow className=\"taskTableRow\" onClick={handleOpenTaskDetailDialog}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {tasks.find(t => t.id === task.task_id)?.name || 'Unknown Task'}\n                </TableCell>\n                <TableCell>\n                    {getStatusString(tasks.find(t => t.id === task.task_id)?.status_id)}\n                </TableCell>\n\n                <TableCell>\n                    {assignees.length > 0 ? assignees.join(', ') : 'Unassigned'}\n                </TableCell>\n                <TableCell>\n                    <button onClick={(e) => { e.stopPropagation(); deleteTask(task.task_id); setTrack(true)}}>Delete</button>\n                </TableCell>\n            </TableRow>\n            <TaskDetailDialog open={isTaskDetailDialogOpen}\n                handleClose={() => { handleCloseTaskDetailDialog(); setTrack(true); }}\n                taskId={task.task_id}\n            />\n        </>\n    );\n}\n\nexport default TaskTableRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}