{"ast":null,"code":"var _jsxFileName = \"/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TableRow, TableCell } from '@mui/material';\nimport TaskDetailDialog from './TaskDetailDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskTableRow({\n  task,\n  tasks\n}) {\n  _s();\n  var _tasks$find, _tasks$find2;\n  const [isTaskDetailDialogOpen, setTaskDetailDialogOpen] = useState(false);\n  const handleOpenTaskDetailDialog = () => {\n    setTaskDetailDialogOpen(true);\n  };\n  const handleCloseTaskDetailDialog = () => {\n    setTaskDetailDialogOpen(false);\n  };\n\n  // Funktion zum Übersetzen des Statuswerts in den entsprechenden String\n  const getStatusString = statusId => {\n    switch (statusId) {\n      case 1:\n        return 'not_started';\n      case 2:\n        return 'in_progress';\n      case 3:\n        return 'completed';\n      default:\n        return 'Unknown Status';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: \"taskTableRow\",\n      onClick: handleOpenTaskDetailDialog,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: ((_tasks$find = tasks.find(t => t.id === task.task_id)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.name) || 'Unknown Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: getStatusString((_tasks$find2 = tasks.find(t => t.id === task.task_id)) === null || _tasks$find2 === void 0 ? void 0 : _tasks$find2.status_id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskDetailDialog, {\n      open: isTaskDetailDialogOpen,\n      handleClose: handleCloseTaskDetailDialog,\n      taskId: task.task_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskTableRow, \"JvSYlVCJcBzKheswk0zayh9Nne8=\");\n_c = TaskTableRow;\nexport default TaskTableRow;\nvar _c;\n$RefreshReg$(_c, \"TaskTableRow\");","map":{"version":3,"names":["React","useState","TableRow","TableCell","TaskDetailDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskTableRow","task","tasks","_s","_tasks$find","_tasks$find2","isTaskDetailDialogOpen","setTaskDetailDialogOpen","handleOpenTaskDetailDialog","handleCloseTaskDetailDialog","getStatusString","statusId","children","className","onClick","component","scope","find","t","id","task_id","name","fileName","_jsxFileName","lineNumber","columnNumber","status_id","open","handleClose","taskId","_c","$RefreshReg$"],"sources":["/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TableRow, TableCell } from '@mui/material';\nimport TaskDetailDialog from './TaskDetailDialog';\n\nfunction TaskTableRow({ task, tasks }) {\n    const [isTaskDetailDialogOpen, setTaskDetailDialogOpen] = useState(false);\n\n    const handleOpenTaskDetailDialog = () => {\n        setTaskDetailDialogOpen(true);\n    };\n\n    const handleCloseTaskDetailDialog = () => {\n        setTaskDetailDialogOpen(false);\n    };\n\n    // Funktion zum Übersetzen des Statuswerts in den entsprechenden String\n    const getStatusString = (statusId) => {\n        switch (statusId) {\n            case 1:\n                return 'not_started';\n            case 2:\n                return 'in_progress';\n            case 3:\n                return 'completed';\n            default:\n                return 'Unknown Status';\n        }\n    };\n\n    return (\n        <>\n            <TableRow className=\"taskTableRow\" onClick={handleOpenTaskDetailDialog}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {tasks.find(t => t.id === task.task_id)?.name || 'Unknown Task'}\n                </TableCell>\n                <TableCell>\n                    {getStatusString(tasks.find(t => t.id === task.task_id)?.status_id)}\n                </TableCell>\n            </TableRow>\n            <TaskDetailDialog open={isTaskDetailDialogOpen} handleClose={handleCloseTaskDetailDialog} taskId={task.task_id} />\n        </>\n    );\n}\n\nexport default TaskTableRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,eAAe;AACnD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,WAAA,EAAAC,YAAA;EACnC,MAAM,CAACC,sBAAsB,EAAEC,uBAAuB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEzE,MAAMgB,0BAA0B,GAAGA,CAAA,KAAM;IACrCD,uBAAuB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAME,2BAA2B,GAAGA,CAAA,KAAM;IACtCF,uBAAuB,CAAC,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,MAAMG,eAAe,GAAIC,QAAQ,IAAK;IAClC,QAAQA,QAAQ;MACZ,KAAK,CAAC;QACF,OAAO,aAAa;MACxB,KAAK,CAAC;QACF,OAAO,aAAa;MACxB,KAAK,CAAC;QACF,OAAO,WAAW;MACtB;QACI,OAAO,gBAAgB;IAC/B;EACJ,CAAC;EAED,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA,CAACJ,QAAQ;MAACoB,SAAS,EAAC,cAAc;MAACC,OAAO,EAAEN,0BAA2B;MAAAI,QAAA,gBACnEf,OAAA,CAACH,SAAS;QAACqB,SAAS,EAAC,IAAI;QAACC,KAAK,EAAC,KAAK;QAAAJ,QAAA,EAChC,EAAAR,WAAA,GAAAF,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKlB,IAAI,CAACmB,OAAO,CAAC,cAAAhB,WAAA,uBAAtCA,WAAA,CAAwCiB,IAAI,KAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACZ5B,OAAA,CAACH,SAAS;QAAAkB,QAAA,EACLF,eAAe,EAAAL,YAAA,GAACH,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKlB,IAAI,CAACmB,OAAO,CAAC,cAAAf,YAAA,uBAAtCA,YAAA,CAAwCqB,SAAS;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACX5B,OAAA,CAACF,gBAAgB;MAACgC,IAAI,EAAErB,sBAAuB;MAACsB,WAAW,EAAEnB,2BAA4B;MAACoB,MAAM,EAAE5B,IAAI,CAACmB;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpH,CAAC;AAEX;AAACtB,EAAA,CAtCQH,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}