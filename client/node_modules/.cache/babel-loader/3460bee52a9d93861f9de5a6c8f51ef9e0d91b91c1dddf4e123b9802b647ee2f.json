{"ast":null,"code":"import axios from 'axios';\nexport const handleLogin = async (username, password) => {\n  const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API\n  });\n  try {\n    const token = btoa(`${username}:${password}`);\n    const response = await axiosInstance.post('/login', {}, {\n      headers: {\n        Authorization: `Basic ${token}`\n      }\n    });\n    if (response.status >= 200 && response.status < 300) {\n      localStorage.setItem('expiration', new Date().getTime() + 1000 * 60 * 60 * 24);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      localStorage.setItem('token', token);\n      return token;\n    } else {\n      throw new Error('Fehler beim Login');\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport default handleLogin;","map":{"version":3,"names":["axios","handleLogin","username","password","axiosInstance","create","baseURL","process","env","REACT_APP_API","token","btoa","response","post","headers","Authorization","status","localStorage","setItem","Date","getTime","JSON","stringify","data","user","Error","error"],"sources":["/home/john/Dokumente/projects/taskify/client/src/lib/login.js"],"sourcesContent":["import axios from 'axios';\n\nexport const handleLogin = async (username, password) => {\n\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API,\n    });\n\n    try {\n        const token = btoa(`${username}:${password}`);\n        const response = await axiosInstance.post(\n            '/login',\n            {},\n            {\n                headers: {\n                    Authorization: `Basic ${token}`\n                }\n            }\n        );\n        if (response.status >= 200 && response.status < 300) {\n            localStorage.setItem('expiration', new Date().getTime() + 1000 * 60 * 60 * 24);\n            localStorage.setItem('user', JSON.stringify(response.data.user));\n            localStorage.setItem('token', token);\n            return token;\n        } else {\n            throw new Error('Fehler beim Login');\n        }\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport default handleLogin;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAErD,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAAC;IAC/BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;EACzB,CAAC,CAAC;EAEF,IAAI;IACA,MAAMC,KAAK,GAAGC,IAAI,CAAE,GAAET,QAAS,IAAGC,QAAS,EAAC,CAAC;IAC7C,MAAMS,QAAQ,GAAG,MAAMR,aAAa,CAACS,IAAI,CACrC,QAAQ,EACR,CAAC,CAAC,EACF;MACIC,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQL,KAAM;MAClC;IACJ,CACJ,CAAC;IACD,IAAIE,QAAQ,CAACI,MAAM,IAAI,GAAG,IAAIJ,QAAQ,CAACI,MAAM,GAAG,GAAG,EAAE;MACjDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;MAC9EH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEG,IAAI,CAACC,SAAS,CAACV,QAAQ,CAACW,IAAI,CAACC,IAAI,CAAC,CAAC;MAChEP,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;MACpC,OAAOA,KAAK;IAChB,CAAC,MAAM;MACH,MAAM,IAAIe,KAAK,CAAC,mBAAmB,CAAC;IACxC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,eAAezB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}