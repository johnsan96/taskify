[{"/home/john/Dokumente/projects/taskify/client/src/index.js":"1","/home/john/Dokumente/projects/taskify/client/src/reportWebVitals.js":"2","/home/john/Dokumente/projects/taskify/client/src/App.js":"3","/home/john/Dokumente/projects/taskify/client/src/components/SignIn.js":"4","/home/john/Dokumente/projects/taskify/client/src/components/Register.js":"5","/home/john/Dokumente/projects/taskify/client/src/components/Main.js":"6","/home/john/Dokumente/projects/taskify/client/src/context/AuthProvider.js":"7","/home/john/Dokumente/projects/taskify/client/src/components/RequireAuth.js":"8","/home/john/Dokumente/projects/taskify/client/src/hooks/useAuth.js":"9","/home/john/Dokumente/projects/taskify/client/src/components/Unauthorized.js":"10","/home/john/Dokumente/projects/taskify/client/src/components/NotFound.js":"11","/home/john/Dokumente/projects/taskify/client/src/components/Project.js":"12","/home/john/Dokumente/projects/taskify/client/src/components/TaskCreationDialog.js":"13","/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js":"14","/home/john/Dokumente/projects/taskify/client/src/components/Layout.js":"15","/home/john/Dokumente/projects/taskify/client/src/components/MainNavigation.js":"16","/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js":"17","/home/john/Dokumente/projects/taskify/client/src/hooks/useApi.js":"18","/home/john/Dokumente/projects/taskify/client/src/lib/api.js":"19"},{"size":540,"mtime":1711054302689,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1709513988401,"results":"22","hashOfConfig":"21"},{"size":1462,"mtime":1711053661110,"results":"23","hashOfConfig":"21"},{"size":3120,"mtime":1711038374304,"results":"24","hashOfConfig":"21"},{"size":2293,"mtime":1711049374774,"results":"25","hashOfConfig":"21"},{"size":3144,"mtime":1711218625237,"results":"26","hashOfConfig":"21"},{"size":346,"mtime":1710864245670,"results":"27","hashOfConfig":"21"},{"size":931,"mtime":1710884467131,"results":"28","hashOfConfig":"21"},{"size":507,"mtime":1710867713792,"results":"29","hashOfConfig":"21"},{"size":475,"mtime":1710803956658,"results":"30","hashOfConfig":"21"},{"size":511,"mtime":1710883191704,"results":"31","hashOfConfig":"21"},{"size":3828,"mtime":1711221365396,"results":"32","hashOfConfig":"21"},{"size":1989,"mtime":1711036179617,"results":"33","hashOfConfig":"21"},{"size":3596,"mtime":1711224485807,"results":"34","hashOfConfig":"21"},{"size":487,"mtime":1711210271380,"results":"35","hashOfConfig":"21"},{"size":2330,"mtime":1711210590451,"results":"36","hashOfConfig":"21"},{"size":2793,"mtime":1711224146222,"results":"37","hashOfConfig":"21"},{"size":1617,"mtime":1711221390648,"results":"38","hashOfConfig":"21"},{"size":1316,"mtime":1711219288342,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1xvqf42",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/john/Dokumente/projects/taskify/client/src/index.js",[],[],[],"/home/john/Dokumente/projects/taskify/client/src/reportWebVitals.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/App.js",["103","104","105"],[],"import React from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Main from './components/Main';\nimport SignIn from \"./components/SignIn\";\nimport Register from \"./components/Register\";\nimport Unauthorized from \"./components/Unauthorized\";\nimport RequireAuth from \"./components/RequireAuth\";\nimport NotFound from \"./components/NotFound\";\nimport Project from \"./components/Project\";\nimport Layout from \"./components/Layout\";\n\nconst App = () => {\n\n  const [token, setToken] = React.useState(localStorage.getItem('token') || null);\n\n  function isEmpty(obj) {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  React.useEffect(() => {\n    // Überprüfen, ob im Local Storage ein Token vorhanden ist\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    } else {\n      setToken(null);\n      localStorage.removeItem('token')\n    }\n\n  }, [token]);\n\n\n\n  return (\n\n    <Routes>\n\n      <Route path=\"login\" element={<SignIn />} />\n      <Route path=\"register\" element={<Register />} />\n\n      <Route path=\"/\" element={<Layout />} >\n\n        <Route element={<RequireAuth />}>\n          <Route path=\"\" element={<Main />} />\n          <Route path=\"project/:id\" element={<Project />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n\n      </Route>\n\n    </Routes>\n\n\n  );\n};\n\n\nexport default App;\n","/home/john/Dokumente/projects/taskify/client/src/components/SignIn.js",["106","107"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, Navigate, Link } from 'react-router-dom';\nimport useAuth from '../hooks/useAuth';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const navigate = useNavigate();\n\n    const { token, setToken } = useAuth();\n\n    const location = useLocation();\n    const from = location.state?.from?.pathname || \"/\";\n\n    /*    useEffect(() => {\n         // Überprüfen, ob der Benutzer bereits angemeldet ist\n         if (token && localStorage.getItem(\"token\")) {\n           // Wenn ja, weiterleiten zur Hauptseite\n           navigate('/');\n         }\n       }, [token]); */\n\n\n    const axiosInstance = axios.create({ timeout: 2000, baseURL: \"http://localhost:4000\", withCredentials: true })\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const token = btoa(`${username}:${password}`);\n            const response = await axiosInstance.post(\n                '/login',\n                {},\n                {\n                    headers: {\n                        Authorization: `Basic ${token}`\n                    }\n                }\n            );\n            console.log(\"response: \" + response.data, response.status); // Erfolgreiche Antwort vom Server\n\n            if (response.status >= 200 && response.status < 300) {\n                localStorage.setItem(\"expiration\", new Date().getTime() + 1000 * 60 * 60 * 24)\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n                localStorage.setItem('token', token);\n\n                setToken(token)\n                navigate(from, { replace: true });\n\n            } else {\n                // Handle unsuccessful login\n                console.error('Fehler beim Login:', response.status);\n                setError('Fehler beim Login');\n            }\n\n\n        } catch (err) {\n            console.error('Fehler beim Login:', err);\n            setError('Fehler beim Login');\n        }\n    };\n\n    const showAuth = () => {\n        console.log(token)\n    }\n\n    /*   if (token) {\n          return <Navigate to=\"/\" />;\n      } */\n\n    return (\n        <div>\n            <h2>Login</h2>\n            {error && <div>{error}</div>}\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label>Username:</label>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n            <Link to={`/register/`} style={{ display: 'block' }}>\n                Registrieren\n            </Link>\n            <button type=\"button\" onClick={showAuth}>Show Auth</button>\n        </div>\n    );\n};\n\nexport default Login;\n","/home/john/Dokumente/projects/taskify/client/src/components/Register.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/Main.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/context/AuthProvider.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/RequireAuth.js",["108"],[],"import { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useEffect, useState } from \"react\";\n\nconst RequireAuth = () => {\n    const { token } = useAuth();\n    const [isLoading, setIsLoading] = useState(true);\n    /* const location = useLocation();\n\n    function isEmpty(obj) {\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n        return true;\n    } */\n    \n    useEffect(() => {\n        console.log(\"requireAuth\")\n        setIsLoading(false);\n\n    }, [token]);\n\n    return (\n        isLoading ? (\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\"></span>\n            </div>\n        ) : token ? (\n            <Outlet />\n        ) : (\n            <Navigate to=\"/login\" />\n        )\n\n      \n    );\n}\n\nexport default RequireAuth;\n","/home/john/Dokumente/projects/taskify/client/src/hooks/useAuth.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/Unauthorized.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/NotFound.js",["109","110","111","112","113","114"],[],"import { useLocation, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth';\n\nconst NotFound = () => {\n\n    const navigate = useNavigate();\n    const { token, setToken } = useAuth();\n\n /*    useEffect(() => {\n        navigate('/login');\n    }, [navigate]); */\n\n    return (\n        <article style={{ padding: \"100px\" }}>\n            <h1>Oops!</h1>\n            <p>Page Not Found</p>\n        </article>\n    )\n}\n\nexport default NotFound;\n","/home/john/Dokumente/projects/taskify/client/src/components/Project.js",["115","116"],[],"/home/john/Dokumente/projects/taskify/client/src/components/TaskCreationDialog.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/TaskDetailDialog.js",["117","118","119"],[],"/home/john/Dokumente/projects/taskify/client/src/components/Layout.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/components/MainNavigation.js",["120","121","122"],[],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport useAuth from '../hooks/useAuth';\n\nfunction MainNavigation() {\n    const navigate = useNavigate();\n  \n    const { token, setToken } = useAuth();  \n   \n    const [user, setUser] = useState();\n\n    const handleLogout = () => {\n        // Lösche den Token aus dem Local Storage\n        localStorage.removeItem('token');\n        localStorage.removeItem('user')\n        localStorage.removeItem('expiration')\n        // Setze den Token auf null im AuthContext\n        setToken(null);\n        // Setze den Benutzer auf null\n        setUser(null);\n        // Optional: Weiterleitung zur Login-Seite\n        navigate('/login');\n      };\n\n    return (\n        <header className=\"main-header\">\n            <nav className=\"d-flex justify-content-between align-items-center pe-5 ps-5\">\n                <div className=\"p-2\">\n                    <NavLink to=\"/\" className=\"text-decoration-none mt-1 text-white fs-4\">\n                        Taskify\n                    </NavLink>\n                    <ul className=\"nav nav-pills mt-4 d-flex flex-row align-self-center\">\n                        <li className=\"nav-item me-2\">\n                            <NavLink to=\"/\" className=\"nav-link\" end>\n                                Dashboard\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item me-2\">\n                            <NavLink to=\"/board\" className=\"nav-link\">\n                                Board\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item me-2\">\n                            <NavLink to=\"/about\" className=\"nav-link\">\n                                About\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"nav nav-pills mt-4 d-flex flex-row align-self-center\">\n                    <button onClick={handleLogout} className=\"btn btn-primary\">\n                        <i className=\"bi bi-box-arrow-left\"></i> Ausloggen\n                    </button>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default MainNavigation;\n","/home/john/Dokumente/projects/taskify/client/src/components/TaskTableRow.js",[],[],"/home/john/Dokumente/projects/taskify/client/src/hooks/useApi.js",["123"],[],"/home/john/Dokumente/projects/taskify/client/src/lib/api.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"128","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":20},{"ruleId":"124","severity":1,"message":"129","line":16,"column":12,"nodeType":"126","messageId":"127","endLine":16,"endColumn":19},{"ruleId":"124","severity":1,"message":"130","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":3,"column":36,"nodeType":"126","messageId":"127","endLine":3,"endColumn":44},{"ruleId":"124","severity":1,"message":"131","line":1,"column":28,"nodeType":"126","messageId":"127","endLine":1,"endColumn":39},{"ruleId":"124","severity":1,"message":"131","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":21},{"ruleId":"124","severity":1,"message":"132","line":2,"column":17,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"130","line":2,"column":27,"nodeType":"126","messageId":"127","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"133","line":7,"column":11,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"134","line":8,"column":13,"nodeType":"126","messageId":"127","endLine":8,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":8,"column":20,"nodeType":"126","messageId":"127","endLine":8,"endColumn":28},{"ruleId":"124","severity":1,"message":"136","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":47,"column":8,"nodeType":"139","endLine":47,"endColumn":10,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"142","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":14},{"ruleId":"137","severity":1,"message":"143","line":19,"column":6,"nodeType":"139","endLine":19,"endColumn":20,"suggestions":"144"},{"ruleId":"124","severity":1,"message":"130","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"134","line":9,"column":13,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"145","line":11,"column":12,"nodeType":"126","messageId":"127","endLine":11,"endColumn":16},{"ruleId":"137","severity":1,"message":"146","line":23,"column":8,"nodeType":"139","endLine":23,"endColumn":14,"suggestions":"147"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'Unauthorized' is defined but never used.","'isEmpty' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'useState' is defined but never used.","'navigate' is assigned a value but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'useNavigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'useUsers' is defined but never used.","'task' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAvailableUsers'. Either include it or remove the dependency array.",["149"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["150"],{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [getProject]",{"range":"157","text":"158"},"Update the dependencies array to be: [fetchAvailableUsers, open, taskId]",{"range":"159","text":"160"},"Update the dependencies array to be: [role, test]",{"range":"161","text":"162"},[1479,1481],"[getProject]",[734,748],"[fetchAvailableUsers, open, taskId]",[653,659],"[role, test]"]